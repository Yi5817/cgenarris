#ifndef MOLECULE_PLACEMENT_H
#define MOLECULE_PLACEMENT_H


void place_molecule_at_general_position(crystal *Xtal, molecule *mol,
	int hall_number);
	
void place_molecule_at_inversion_center(crystal *Xtal, molecule *mol,
	int hall_number);

void align_molecule_mirror_plane(crystal *Xtal, molecule *mol,
	int hall_number);

void apply_all_symmetry_ops(crystal *xtal,
							molecule *mol,
							float* mol_Xfrac,
							float *mol_Yfrac,
							float *mol_Zfrac,
							int N,
							int hall_number);
		
void place_molecule_at_position(crystal *Xtal,
								molecule *mol,
								int hall_number,
								int spg,
								int wyckoff_pos);

int auto_align_and_generate_at_position(crystal *Xtal,
										molecule *mol,
										int hall_number,
										int spg,
										int wyckoff_pos,
										float *mol_axes,
										int num_axes, 
										int* overlap_list);
int align_using_std_orientations(crystal* xtal_1,		\
							  molecule* mol,		\
							  int hall_number,		\
							  float *mol_axes,	\
							  int num_axes,	\
							  float first_com[3],\
							  int overlap_list[],
							  int len_overlap_list,
							  int dof);
							  
int get_degrees_of_freedom(int spg, int pos);

#endif

typedef struct
{
	unsigned int number_of_positions;
	
	/*the number representing the alphabet
	 * spg 47 has max positions of 27 "a-z" special + "A" general */
	unsigned int wyckoff_letter_number[27];
	
	/*store the position of the first point, the remaining can be
	 * generated by symmetry*/ 
	float positions[27][3];
	
}inversion_center;

typedef struct
{
	unsigned int number_of_positions;
	unsigned int wyckoff_letter_number[27];
	
	float first_position_trans[27][3];
	float first_position_rot[27][3][3];
	/*direction of the normal
	 * there can be only 3 possinble directions*/
	int normal[27];
	
}mirror_plane;


typedef struct 
{
	inversion_center I;
	mirror_plane M;
	
}DATABASE;

